\relax 
\bibstyle{plain}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\@writefile{toc}{\contentsline {chapter}{\numberline {1}Text Data and Regular Expressions}{1}{chapter.1}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{toc}{\contentsline {section}{\numberline {1.1}Introduction}{1}{section.1.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1.1}Placing data on a map}{1}{subsection.1.1.1}}
\newlabel{ssec:map}{{1.1.1}{1}{Placing data on a map\relax }{subsection.1.1.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1.2}Spam filtering}{2}{subsection.1.1.2}}
\newlabel{ssec:spam}{{1.1.2}{2}{Spam filtering\relax }{subsection.1.1.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1.3}Weblogs}{2}{subsection.1.1.3}}
\newlabel{ssec:weblog}{{1.1.3}{2}{Weblogs\relax }{subsection.1.1.3}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1.4}Mining the State of the Union addresses}{3}{subsection.1.1.4}}
\newlabel{ssec:sou}{{1.1.4}{3}{Mining the State of the Union addresses\relax }{subsection.1.1.4}{}}
\@writefile{toc}{\contentsline {section}{\numberline {1.2}Matching literal strings}{4}{section.1.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2.1}Fundamental Approach}{4}{subsection.1.2.1}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.1}{\ignorespaces A diagram of a search for the literal string `St '. The regular expression matching engine looks for the first character `S', immediately followed by t', immediately followed by blank. When it finds the `S' in Slippery, it then checks if the next character is a `t'. Since it is not, it starts over and checks to see if it is an `S', and continues looking for an `S'. The most basic building block in a language that supports matching patterns in text is a facility for specifying a short string of text in a literal string as a pattern to match.}}{5}{figure.1.1}}
\newlabel{fig:literalString}{{1.1}{5}{A diagram of a search for the literal string `St '. The regular expression matching engine looks for the first character `S', immediately followed by t', immediately followed by blank. When it finds the `S' in Slippery, it then checks if the next character is a `t'. Since it is not, it starts over and checks to see if it is an `S', and continues looking for an `S'. The most basic building block in a language that supports matching patterns in text is a facility for specifying a short string of text in a literal string as a pattern to match}{figure.1.1}{}}
\@writefile{toc}{\contentsline {section}{\numberline {1.3}Character Classes}{6}{section.1.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.3.1}Equivalent Characters}{6}{subsection.1.3.1}}
\newlabel{sec:charClass}{{1.3.1}{6}{Equivalent Characters\relax }{subsection.1.3.1}{}}
\@writefile{lot}{\contentsline {table}{\numberline {1.1}{\ignorespaces Some useful named character classes.}}{7}{table.1.1}}
\newlabel{table:charClasses}{{1.1}{7}{Some useful named character classes}{table.1.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.3.2}Named Character Classes}{7}{subsection.1.3.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.3.3}Meta Characters}{9}{subsection.1.3.3}}
\@writefile{toc}{\contentsline {section}{\numberline {1.4}Advanced Notions}{9}{section.1.4}}
\@writefile{lot}{\contentsline {table}{\numberline {1.2}{\ignorespaces Some useful meta characters. Note to search for one of these characters as a literal, it may have to be preceded by a backslash (or two backslashes in R).}}{10}{table.1.2}}
\newlabel{table:metaChars}{{1.2}{10}{Some useful meta characters. Note to search for one of these characters as a literal, it may have to be preceded by a backslash (or two backslashes in R)}{table.1.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.4.1}Grouping and references}{11}{subsection.1.4.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.4.2}Alternation}{12}{subsection.1.4.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.4.3}Number of matches}{12}{subsection.1.4.3}}
\@writefile{toc}{\contentsline {section}{\numberline {1.5}Greedy Matching}{13}{section.1.5}}
\@writefile{toc}{\contentsline {section}{\numberline {1.6}Summary}{14}{section.1.6}}
\@writefile{toc}{\contentsline {section}{\numberline {1.7}Exercises}{15}{section.1.7}}
\@writefile{toc}{\contentsline {section}{\numberline {1.8}Resources}{15}{section.1.8}}
\@writefile{toc}{\contentsline {section}{\numberline {1.9}Additions}{15}{section.1.9}}
